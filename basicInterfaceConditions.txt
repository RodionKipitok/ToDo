В першу чергу пропишемо базові вимоги до інтерфейсу та логіки роботи програми:



Інтерфейс повинен складатися з кількох частин:

Шапка з інформацією про завдання та фільтри
Форма з полем введення для створення нових завдань
Список завдань


У шапці необхідно відображати:

Кількість виконаних та невиконаних завдань
Фільтри списку завдань зі значеннями «All», «Active» та «Completed»


У кожного елементу списку завдань має бути:

Абзац з текстом який вводив у форму користувач під час створення завдання
Чекбокс перемикання статусу «виконано»
Кнопка видалення завдання

СТРУКТУРА СТАНУ
Стан Redux це завжди об'єкт, всередину якого додаються властивості для стану програми. Тому ми оголосили властивість tasks для масиву всіх завдань та filters для можливих фільтрів. Стан Redux може бути настільки простий або складний, наскільки цього вимагає функціонал програми.


Проектування екшенів

Екшени це події, які можуть статися в додатку, в тому числі як реакція на дії користувача. Складемо список подій, які можуть бути в нашому додатку:



Додати нове завдання з текстом, введеним користувачем
Видалити завдання
Переключити статус завдання
Змінити значення фільтра статусу


Структура файлів проекту
actions.js - файл оголошення екшенів програми
reducer.js - файл оголошення функцій-редюсерів для оновлення стану
constants.js - файл для зберігання констант (наприклад значень фільтру статусу)
selectors.js - файл оголошення функцій-селекторів
store.js - файл створення стор Redux
